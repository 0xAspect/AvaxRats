{"version":3,"sources":["assets/images/logo.png","assets/images/discord1.svg","assets/images/twitter.svg","assets/images/github.svg","assets/images/snowtrace.svg","assets/images/ratCycle.png","assets/images/rarity.png","assets/images/cheese.png","assets/images/rat3.png","serviceWorker.js","components/Navigation.jsx","assets/addresses.js","components/Footer.jsx","components/MintCard.jsx","components/Faq.jsx","components/Home.jsx","components/About.jsx","components/NFTDisplay.jsx","components/Swarm.jsx","components/blog/Post.js","components/Stake.jsx","components/Popup.jsx","components/Mint.jsx","components/SimpleNFT.jsx","index.js","assets/images/trinket.png","assets/images/avax-logo.svg","assets/images/tester.png"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Navigation","props","imgStyle","height","react_default","a","createElement","class","react_router_dom","className","to","style","src","logo","type","data-toggle","data-target","id","role","onClick","web3Enabled","userAddress","network","AvaxLogo","slice","Fragment","isConnected","rats","Math","round","avaxBalance","trinket","trinketBalance","stakedTrinketBalance","nftFactoryAddress","trinketFarmAddress","nibblesAddress","nfTradeAddress","uri","imgUri","snowtraceAddress","Footer","iconStyle","marginRight","url","marginTop","href","target","snowtrace","alt","discord","twitter","github","MintCard","_useState","useState","_useState2","Object","slicedToArray","mintAmount","setMintAmount","width","image","nftTotalSupply","event","value","isLive","mintRat","Faq","expand","setExpand","marginBottom","question","marginLeft","opacity","answer","rarity","Common","Uncommon","Rare","Epic","Legendary","Home","coinStyle","color","fontWeight","textAlign","nibStyle","fontSize","list","components_MintCard","imageRatCycle","imageRarity","About","NFTDisplay","rat","setRat","_useState3","_useState4","ratLevelnum","setRatLevel","_useState5","_useState6","ratYield","setRatYield","_useState7","_useState8","ratlevelCost","setRatLevelCost","_useState9","_useState10","ratGatherTime","setRatGatherTime","_useState11","_useState12","showMeta","setShowMeta","DailyYield","metadataUrl","nftradeUrl","_useState13","_useState14","setRarity","fetchData","_ref","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","data","attributes","stop","apply","this","arguments","handleMeta","_ref2","_callee2","_context2","ratLevel","_ref3","_callee3","x","_context3","loadRatLevel","gatherTime","_ref4","_callee4","_context4","loadGatherTime","ratYieldFunc","_ref5","_callee5","y","_context5","loadRatYield","levelUp","_ref6","_callee6","_context6","levelUpRat","levelUpCost","_ref7","_callee7","cost","_context7","levelUpRatCost","console","log","useEffect","setInterval","bold","Card","hover","varient","Img","Body","Title","name","Table","size","trait_type","colSpan","Contact","ids","Array","from","nftBalance","totalUnclaimedTrinketYield","setTotalUnclaimedTrinketYield","claimYieldAll","claimRatYieldAll","showTotalUnclaimedYield","unclaimed","loadTotalUnclaimedTrinketYield","style1","paddingTop","length","nibblesBalance","toLocaleString","map","claimRatYield","Post","inputValue","setInputValue","maxIsStake","setMaxIsStake","handleStake","toString","stake","handleUnstake","unstake","claimYield","claimNibbles","trinketStyle","nibbleStyle","classname","border","onChange","placeholder","marginBotton","cheese","unclaimedNibbles","Popup","handleClose","header","content","Mint","uris","setURIs","i","imgURL","floor","random","push","randomUris","SimpleNFT","boxshadow","App","web3","Web3","givenProvider","setNetwork","setUserAddress","userConnected","setUserConnected","setAvaxBalance","setTrinketBalance","setNftBalance","setUri","_useState15","_useState16","setNftTotalSupply","_useState17","_useState18","setStakedTrinketBalance","_useState19","_useState20","setUnclaimedNibbles","_useState21","_useState22","setNibblesBalance","_useState23","_useState24","trinketStakeTime","setTrinketStakeTime","nftFactory","eth","Contract","NFT","abi","trinketFarm","Trinket","nibbles","Nibbles","ethereum","send","componentDidMount","abrupt","loadUser","accounts","account","getAccounts","loadNetwork","num","currentProvider","chainId","loadAVAXBalance","useCallback","usr","getBalance","then","balance","utils","fromWei","_x","loadTrinketBalance","bal","methods","balanceOf","call","_x2","loadNibblesBalance","_x3","loadNftBalance","tokenId","baseURL","tokenOfOwnerByIndex","_x4","loadNFTSupply","_ref8","_callee8","_context8","totalSupply","_x5","_ref9","_callee9","_context9","currentLevel","_x6","_ref10","_callee10","time","_context10","_x7","_ref11","_callee11","_context11","calculateYield","_x8","_ref12","_callee12","_context12","totalUnclaimedTrinkets","_x9","_ref13","_callee13","_context13","claimTrinkets","_x10","_ref14","_callee14","claimAmount","_context14","popupHandler","claimTrinketsAllRats","on","receipt","transactionHash","_x11","_ref15","_callee15","levelUpPrice","convertPrice","_context15","toWei","approve","_x12","_ref16","_callee16","_context16","_x13","_ref17","_callee17","nftMintAmount","_context17","createToken","events","Transfer","returnValues","_x14","_useState25","_useState26","isOpen","setIsOpen","_useState27","_useState28","popupHeader","setPopupHeader","_useState29","_useState30","popupContent","setPopupContent","hasConfirmed","parseInt","_ref18","_callee18","convertBal","_context18","tx","_x15","_ref19","_callee19","_context19","_x16","_ref20","_callee20","_context20","conf","_x17","loadStakeTime","_ref21","_callee21","user","_context21","stakeTime","_x18","loadStakedTrinkets","_ref22","_callee22","stakedTrinkets","_context22","userStakingBalance","_x19","loadUnclaimedNibbles","_ref23","_callee23","_context23","_x20","_callee24","_context24","components_Navigation","react_router","path","element","components_Home","components_About","Swarm","Stake","components_Mint","src_components_Popup","components_Footer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9d87e85d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.43caf8cf.png\";","module.exports = __webpack_public_path__ + \"static/media/discord1.7594b796.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.631cd566.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.1bb02710.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowtrace.ac4030e0.svg\";","module.exports = __webpack_public_path__ + \"static/media/ratCycle.4921a5f2.png\";","module.exports = __webpack_public_path__ + \"static/media/rarity.8eae51be.png\";","module.exports = __webpack_public_path__ + \"static/media/cheese.e387c5a6.png\";","module.exports = __webpack_public_path__ + \"static/media/rat3.fb70e006.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service '\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all '\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n            headers: {\n                'Service-Worker': 'script'\n            },\n        })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}","import React from 'react'\nimport { NavLink } from \"react-router-dom\";\nimport AvaxLogo from \"../assets/images/avax-logo.svg\";\nimport logo from \"../assets/images/logo.png\";\nimport './Home.css'\nimport trinket from '../assets/images/trinket.png';\n\n\n\nfunction Navigation(props) {\n \n\n\nconst imgStyle = {\n  height: '20px',\n}\n\n  return (\n    <div> \n \n    <nav class=\"navbar navbar-expand-md bg-dark navbar-dark\">\n      <NavLink className=\"nav-link\" to=\"/\"> <img style = {{height: '25px'}} src={logo}></img> </NavLink>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n    <ul class=\"navbar-nav\">\n    <li class=\"nav-item\">\n      <NavLink className=\"nav-link\" to=\"/mint\"> MINT </NavLink>\n\n      </li>\n      <li class=\"nav-item\">\n      <NavLink className=\"nav-link\" to=\"/swarm\"> GATHER </NavLink>\n\n      </li>\n      <li class=\"nav-item\">\n      <NavLink className=\"nav-link\" to=\"/stake\"> <a>STAKE</a> </NavLink>\n      </li>\n      <li class=\"nav-item\">\n      <NavLink className=\"nav-link\" to=\"/swarm\"> <a>GROW</a> </NavLink>\n      </li>\n    </ul>\n    \n  </div>  \n  <div>\n  <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n  <li ><NavLink to=\"/mint\"><button \n                          class=\"button-55\" \n                          role=\"button\"> MINT!</button></NavLink></li>\n              <li><button onClick={props.web3Enabled} \n                          class=\"button-54\" \n                          role=\"button\">\n                            {props.userAddress!= 'none' \n                              ? <a> {props.network == \"0xa86a\" || props.network == \"Fuji\" || props.network == \"Avax\"\n                              ? <a><img src={AvaxLogo} style={imgStyle} /> ....{props.userAddress.slice(38,42)} </a>\n                              : 'Wrong Network!'\n                          }</a>\n                      : 'Connect Wallet' \n                    } \n                  </button></li>\n              <>{props.isConnected &&\n              <> \n              <li><NavLink to='/swarm'><button class=\"button-54\" role=\"button\">\n              {props.rats > 0  ? <a>RATS: {props.rats} </a>: <>AVAX:  \n                {props.network == \"0xa86a\" || props.network == \"Fuji\" || props.network == \"Avax\"\n                ? <a> {Math.round(props.avaxBalance * 100) / 100}</a>\n                : <a> N/A</a>\n              }</>}\n                </button></NavLink></li>\n                            <li><button class=\"button-54\" role=\"button\"><img style={imgStyle} src={trinket}></img>  \n                {props.network == \"0xa86a\" || props.network == \"Fuji\" || props.network == \"Avax\"\n                ? <a> {Math.round(props.trinketBalance * 100) / 100} ({Math.round(props.stakedTrinketBalance *100) /100 }) </a> \n                : <a> N/A</a>\n              }</button></li>\n            </> \n            }</>\n\n            </ul>\n  </div>\n</nav>\n\n\n</div>\n  );\n}\n\nexport default Navigation;","\n\n//contract addresses\nconst nftFactoryAddress = '0x0000000000000000000000000000000000000000';\nconst trinketFarmAddress = '0x0000000000000000000000000000000000000000';\nconst nibblesAddress = '0x0000000000000000000000000000000000000000';\n\n//external urls\nconst nfTradeAddress = 'https://testnets.nftrade.com/assets/fuji/';\nconst uri = 'https://gateway.pinata.cloud/ipfs/QmQw7JL5bxPJQub9Bp6UnzSL2gWqsXS7by9muCvE3jcrBL/'\nconst imgUri = 'https://gateway.pinata.cloud/ipfs/QmcE8Cegmw3D7Aiqo5Pq5VP814m4VnhpGjsvBRqMGrjTso/'\nconst snowtraceAddress = 'https://testnet.snowtrace.io/';\nexport {nftFactoryAddress, nfTradeAddress, uri, trinketFarmAddress, nibblesAddress, imgUri, snowtraceAddress}","\nimport React from \"react\";\nimport {nftFactoryAddress,snowtraceAddress}from '../assets/addresses.js';\nimport discord from \"../assets/images/discord1.svg\";\nimport twitter from \"../assets/images/twitter.svg\";\nimport github from \"../assets/images/github.svg\";\nimport snowtrace from \"../assets/images/snowtrace.svg\"\n\nfunction Footer() {\n\n  //todo add social links to images\n\nconst iconStyle = {\n  height : '30px',\n  marginRight: '10px'\n}\n\nvar url = {snowtraceAddress} + nftFactoryAddress;\n\n  return (\n    <div className=\"footer\" style={{marginTop: \"50px\"}}>\n      <footer className=\"py-3 bg-dark fixed-bottom\">\n        <div className=\"container\">\n          <div className='text-center'>\n              <a href={url} target=\"_blank\" ><img src={snowtrace} style={iconStyle} alt=\"\" /></a>\n              <a href='https://www.google.com'target=\"_blank\" ><img src={discord} style={iconStyle} alt=\"\" /></a>\n              <a href='https://www.twitter.com/Avaxrats'target=\"_blank\" ><img src={twitter} style={iconStyle} alt=\"\" /></a>\n              <img src={github} style={iconStyle} alt=\"\" />\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default Footer;","import React, {useState} from \"react\";\nimport image from \"../assets/images/avax-logo.svg\";\nimport './Mint.css'\nimport './Home.css'\n\n\n\n\n\n// import Button from \"react-bootstrap/Button\";\nimport 'reactjs-popup/dist/index.css';\n\n\n\nfunction MintCard(props) {\n\n  const [mintAmount, setMintAmount] = useState(1);\n\n    const mintRat = () => {\n        props.mintRat(mintAmount)\n    }\n    const handleMintAmountChange = (event) => {\n      \n        \n        if (event.target.value == 'up'){\n            if (mintAmount < 20 ){\n                setMintAmount(mintAmount+1)\n            }\n        }\n        if (event.target.value == 'down'){\n            if (mintAmount > 1 ){\n                setMintAmount(mintAmount-1)\n            }\n        }\n    }\n    \n  return (\n\n<div class=\"card mint-card\" style = {{width: '100%'}}>\n    <div class=\"card-horizontal  \" >\n        <div class=\"img-square-wrapper\">\n        </div>\n        <div class=\"card-body\">\n            <h1 class=\"card-title\">Mint Now</h1>\n            <h4 class=\"card-title\"> Cost: <img src={image} width =\"25px\"></img> 1</h4>\n            <h4> {props.nftTotalSupply}/10,000 Rats minted so far</h4>\n            <div onClick={handleMintAmountChange} width='100%'> <button value='down' class='button-54 btn-down' >-</button> <button class=' button-54 btn-mid' >{mintAmount}</button> <button class='button-54 btn-up' value='up'>+</button>   </div>\n            <div>\n              {props.userAddress != 'none' \n              ? <div>{props.isLive === true ? <button  class=\"button-54 btn-margin\" onClick={mintRat}> <a>Mint! </a> </button> : <button  class=\"button-54 btn-margin\" > <a>Mint! (SOON) </a> </button> }</div>\n              : <button  class=\"button-54 btn-margin\" onClick={props.web3Enabled}> <a> PLEASE CONNECT WALLET </a> </button> }\n              </div> \n            \n            <p></p>\n            <p class=\"card-text\"> Avax: {Math.round(props.avaxBalance * 100) / 100}</p>\n        </div>\n    </div>\n  \n</div>\n\n  );\n} \nexport default MintCard;\n","import React, {useState } from \"react\";\nimport \"./arrow.css\";\n\nexport default function Faq(props) {\n  const [expand, setExpand] = useState(false);\n  const arrowChange = () => {\n    setExpand(!expand);\n  };\n  return (\n    <div onClick={arrowChange} style={{ marginBottom: \"10px\" }}>\n      <span>\n        <i\n          style={{ marginRight: \"20px\" }}\n          class={expand === false ? \"arrow right\" : \"arrow down\"}\n        ></i>\n      </span>\n      {props.question}\n      <>\n        {expand && (\n          <p style={{ marginLeft: \"45px\", opacity: \".50\" }}>{props.answer}</p>\n        )}\n      </>\n    </div>\n  );\n}\n","import React, { useState, PureComponent } from \"react\";\nimport MintCard from \"./MintCard\";\nimport Faq from \"./Faq\";\nimport image from \"../assets/images/rat3.png\";\nimport imageRatCycle from \"../assets/images/ratCycle.png\";\nimport imageRarity from \"../assets/images/rarity.png\";\nimport list from \"../assets/images/tester.png\";\nimport \"reactjs-popup/dist/index.css\";\nimport trinket from \"../assets/images/trinket.png\";\n\nconst rarity = {\n  Common: \"color: '#ffffff' \",\n  Uncommon: \"#1eff00\",\n  Rare: \"#0070dd\",\n  Epic: \"\t#a335ee\",\n  Legendary: \"#ff8000\",\n};\n\nfunction Home(props) {\n  const [mintAmount, setMintAmount] = useState(1);\n\n  const mintRat = () => {\n    props.mintRat(mintAmount);\n  };\n  const handleMintAmountChange = (event) => {\n    if (event.target.value == \"up\") {\n      if (mintAmount < 20) {\n        setMintAmount(mintAmount + 1);\n      }\n    }\n    if (event.target.value == \"down\") {\n      if (mintAmount > 1) {\n        setMintAmount(mintAmount - 1);\n      }\n    }\n  };\n\n  const coinStyle = {\n    color: \"#E84141\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  };\n  const nibStyle = {\n    color: \"#EBDD5B\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  };\n  return (\n    <div className=\"home\" style={{ textAlign: \"left\" }}>\n      <div class=\"container\">\n        <div class=\"row align-items-center my-5 lg-0\">\n          <div class=\"col-lg-6\">\n            <h1 class=\"font-weight-light\">Welcome to the SewerVerse</h1>\n            <p style={{ fontSize: \"20px\" }}>\n              {\" \"}\n              The AVAX Rats are a collection of 10,000 unique, levelable NFTs.\n              RATS are constantly currying around in the sewers beneth the\n              Avalanche Blockchain on the hunt for{\" \"}\n              <a style={coinStyle}>TRINKETS</a>, the currency of the SewerVerse.\n              Each RAT starts at life at level 1 but can be fed{\" \"}\n              <a style={nibStyle}>NIBBLES </a> to level up.\n            </p>\n            <p style={{ fontSize: \"20px\" }}>\n              Each RAT is unique, hand-drawn and is randomly generated from\n              numerous traits and assets. All of them are unique, but some are\n              are rarer than others and will have rarer traits. You can check\n              the Rarity Ranking and Distribution below for the details!\n            </p>\n          </div>\n          <div class=\"col-lg-6\">\n            <img class=\"img-fluid rounded mb-4 mb-lg-0\" src={list} alt=\"\" />\n          </div>\n        </div>\n        <MintCard\n          userAddress={props.userAddress}\n          web3Enabled={props.web3Enabled}\n          mintRat={props.mintRat}\n          nftTotalSupply={props.nftTotalSupply}\n          avaxBalance={props.avaxBalance}\n        ></MintCard>\n        <div class=\"row align-items-center my-5 lg-0\">\n          <div class=\"col-lg-6\">\n            <img\n              class=\"img-fluid rounded mb-4 mb-lg-0\"\n              src={imageRatCycle}\n              alt=\"\"\n            />\n          </div>\n          <div class=\"col-lg-6\">\n            <h1 class=\"font-weight-light\">The Sewer Game</h1>\n            <p style={{ fontSize: \"20px\" }}>\n              Each RAT is constantly roaming the SewerVerse looking for{\" \"}\n              <a style={coinStyle}>TRINKETS.</a>\n            </p>\n            <p style={{ fontSize: \"20px\" }}>\n              The higher the level the of the RAT the more{\" \"}\n              <a style={coinStyle}>TRINKETS</a> it will find.\n            </p>\n            <p style={{ fontSize: \"20px\" }}>\n              {\" \"}\n              <a style={coinStyle}>TRINKETS</a> are the currency of the\n              SewerVerse and can be STAKED.\n            </p>\n            <p style={{ fontSize: \"20px\" }}>\n              {\" \"}\n              <a>Staking </a> <a style={coinStyle}>TRINKETS</a> rewards the\n              user's swarm with delicous{\" \"}\n              <a a style={nibStyle}>\n                NIBBLES.\n              </a>\n            </p>\n            <p style={{ fontSize: \"20px\" }}>\n              {\" \"}\n              <a style={nibStyle}>NIBBLES</a> can be{\" \"}\n              <a> fed to RATS to increase their level! </a>\n            </p>\n          </div>\n        </div>\n        <div class=\"row align-items-center my-5 lg-0\">\n          <div class=\"col-lg-6\">\n            <h1 class=\"font-weight-light\">Rarity and Distribution</h1>\n            <p style={{ fontSize: \"20px\" }}>\n              As well as having a unique combination of traits and attributes,\n              each RAT is assigned a rarity:{\" \"}\n            </p>\n            <ul style={{ fontSize: \"20px\" }}>\n              <li style={{ color: rarity.Common }}>45% Common</li>\n              <li style={{ color: rarity.Uncommon }}>25% Uncommon</li>\n              <li style={{ color: rarity.Rare }}>15% Rare</li>\n              <li style={{ color: rarity.Epic }}> 10% Epic</li>\n              <li style={{ color: rarity.Legendary }}> 5% Legendary</li>\n            </ul>\n          </div>\n          <div class=\"col-lg-6\">\n            <img\n              class=\"img-fluid rounded mb-4 mb-lg-0\"\n              src={imageRarity}\n              alt=\"\"\n            />\n          </div>\n        </div>\n\n        <div class=\"row align-items-center my-5\">\n          <div class=\"col-lg-12\">\n            <h1 class=\"font-weight-light\">\n              Unique, levelable, passive yield earning NFTs on the Avax\n              Blockchain with stakeable rewards.\n            </h1>\n          </div>\n        </div>\n\n        <div class=\"row align-items-center my-5\">\n          <div class=\"col-lg-12\">\n            <h1 class=\"font-weight-light\">Fequently Asked Questions </h1>\n            <div style={{ fontSize: \"20px\", marginBottom: \"100px\" }}>\n              <Faq\n                question={\"How much does a RAT cost?\"}\n                answer={\"Each rat costs 1 AVAX.\"}\n              ></Faq>\n              <Faq question={\"When can I mint?\"} answer={\"Soon (tm).\"}></Faq>\n              <Faq\n                question={\"Is there a maximum amount I can mint?\"}\n                answer={\n                  \"20 RATS can be minted per transaction. There is no limit of RATS per wallet.\"\n                }\n              ></Faq>\n              <Faq\n                question={\"What are Trinkets?\"}\n                answer={\n                  \"TRINKETS are the currency of the SewerVerse. RATS gather TRINKETS in proportion to their level.\"\n                }\n              ></Faq>\n              <Faq\n                question={\"Do I have to stake my Rats to earn Trinkets?\"}\n                answer={\"No, RATS are constantly earning TRINKETS.\"}\n              ></Faq>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\n\nfunction About(props) {\n\n\n\n\n  return (\n    <div className=\"about\">\n      <div class=\"container\">\n        <div class=\"row align-items-center my-5\">\n          <div class=\"col-lg-7\">\n            <img\n              class=\"img-fluid rounded mb-4 mb-lg-0\"\n              src=\"http://placehold.it/900x400\"\n              alt=\"\"\n            />\n          </div>\n          <div class=\"col-lg-5\">\n            <h1 class=\"font-weight-light\">About</h1>\n            <p>\n              Lorem Ipsum is simply dummy text of the printing and typesetting\n              industry. Lorem Ipsum has been the industry's standard dummy text\n              ever since the 1500s, when an unknown printer took a galley of\n              type and scrambled it to make a type specimen book.\n            </p>\n  \n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default About;","import React, { useEffect, useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport axios from \"axios\";\nimport { nftFactoryAddress, nfTradeAddress, uri } from \"../assets/addresses.js\";\nimport arrow from \"./arrow.css\";\n\nexport default function NFTDisplay(props) {\n  const [rat, setRat] = useState(\"\");\n  const [ratLevelnum, setRatLevel] = useState(\"\");\n  const [ratYield, setRatYield] = useState(\"\");\n  const [ratlevelCost, setRatLevelCost] = useState(\" \");\n  const [ratGatherTime, setRatGatherTime] = useState(\" \");\n  const [showMeta, setShowMeta] = useState(false);\n\n  const DailyYield = Math.round((ratYield / ratGatherTime) * 60 * 60 * 24);\n  const metadataUrl = uri + props.id + \".json\";\n  const nftradeUrl = nfTradeAddress + nftFactoryAddress + \"/\" + props.id;\n\n  //style properties\n\n  const [rarity, setRarity] = useState(\"\");\n\n  const fetchData = async () => {\n    const response = await axios.get(metadataUrl);\n    setRat(response.data);\n    const rarity = response.data.attributes[0].value;\n    if (rarity == \"Common\") {\n      setRarity(\"fffff\");\n    }\n    if (rarity == \"Uncommon\") {\n      setRarity(\"#1eff00\");\n    }\n    if (rarity == \"Rare\") {\n      setRarity(\"#0070dd\");\n    }\n    if (rarity == \"Epic\") {\n      setRarity(\"#a335ee\");\n    }\n    if (rarity == \"Legendary\") {\n      setRarity(\"#ff8000\");\n    }\n  };\n\n  const handleMeta = async () => {\n    setShowMeta(!showMeta);\n  };\n\n  const ratLevel = async () => {\n    let x = await props.loadRatLevel(props.id);\n    setRatLevel(x);\n  };\n\n  const gatherTime = async () => {\n    let x = await props.loadGatherTime(props.id);\n    setRatGatherTime(x);\n  };\n  const ratYieldFunc = async () => {\n    let y = await props.loadRatYield(props.id);\n    setRatYield(y);\n  };\n  const levelUp = async () => {\n    props.levelUpRat(props.id);\n  };\n  const levelUpCost = async () => {\n    let cost = await props.levelUpRatCost(props.id);\n    setRatLevelCost(cost);\n  };\n  // const claimYield = async() => {\n  //   props.claimRatYield(props.id)\n  // }\n  console.log(rarity);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetchData();\n      ratLevel();\n      levelUpCost();\n      ratYieldFunc();\n      gatherTime();\n    }, 2000);\n  }, [props.userAddress]);\n\n  const style1 = {\n    width: \"20rem\",\n  };\n\n  const bold = {\n    fontWeight: \"bold\",\n  };\n  return (\n    <div className=\"col-xs-6 col-md-4\" style={style1}>\n      {rat && (\n        <Card style={{ textAlign: \"left\" }} hover varient=\"dark\">\n          <Card.Img src={rat.image} />\n          <Card.Body>\n            <Card.Title onClick={handleMeta} style={{ color: \"black\" }}>\n              <h4>\n                {\" \"}\n                {rat.name}{\" \"}\n                <span style={{ textAlign: \"right\" }} onClick={handleMeta}>\n                  <i class={showMeta === false ? \"arrow up\" : \"arrow down\"}></i>\n                </span>\n              </h4>{\" \"}\n              <h5>\n                Level {ratLevelnum}{\" \"}\n                <a style={{ color: rarity }}>{rat.attributes[0].value}</a>{\" \"}\n              </h5>{\" \"}\n              <h5>\n                Trinkets gathered: {ratYield} ({DailyYield}/day){\" \"}\n              </h5>\n            </Card.Title>\n            <>\n              {showMeta && (\n                <Table hover varient=\"dark\" size=\"sm\">\n                  <tbody>\n                    <tr>\n                      <td> {rat.attributes[1].trait_type}</td>\n                      <td colSpan={2} style={bold}>\n                        {\" \"}\n                        {rat.attributes[1].value}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td> {rat.attributes[2].trait_type}</td>\n                      <td colSpan={2} style={bold}>\n                        {\" \"}\n                        {rat.attributes[2].value}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td> {rat.attributes[3].trait_type}</td>\n                      <td colSpan={2} style={bold}>\n                        {\" \"}\n                        {rat.attributes[3].value}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td> {rat.attributes[4].trait_type}</td>\n                      <td colSpan={2} style={bold}>\n                        {\" \"}\n                        {rat.attributes[4].value}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td> {rat.attributes[5].trait_type}</td>\n                      <td colSpan={2} style={bold}>\n                        {\" \"}\n                        {rat.attributes[5].value}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td> {rat.attributes[6].trait_type}</td>\n                      <td colSpan={2} style={bold}>\n                        {\" \"}\n                        {rat.attributes[6].value}\n                      </td>\n                    </tr>\n\n                    <tr>\n                      <td colSpan={2}>\n                        {\" \"}\n                        <a href={nftradeUrl}> view on NFTtrade</a>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              )}\n            </>\n            <button class=\"button-54\" role=\"button\" onClick={levelUp}>\n              {\" \"}\n              <a>level up: {ratlevelCost} $NiBBLES </a>{\" \"}\n            </button>\n          </Card.Body>\n        </Card>\n      )}\n    </div>\n  );\n}\n","import React, {useState, useEffect} from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport NFTDisplay from \"./NFTDisplay.jsx\";\nimport './Home.css'\nimport trinket from '../assets/images/trinket.png';\n\n\n\n\n\nfunction Contact(props) {\n\n  var ids = Array.from(props.nftBalance);\n  const [ totalUnclaimedTrinketYield, setTotalUnclaimedTrinketYield ] = useState(0);\n\n\n  const claimYieldAll = async() => {\n    props.claimRatYieldAll(props.userAddress)\n  }\n\n  const showTotalUnclaimedYield = async() => {\n    const unclaimed = await props.loadTotalUnclaimedTrinketYield(props.userAddress);\n    setTotalUnclaimedTrinketYield(unclaimed /10);\n  }\n\n  const style1 = {\n    paddingTop: \"25px\",\n  }\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (props.userAddress != 'none'){\n        showTotalUnclaimedYield()\n      }\n      },2000);\n      }, [props.userAddress])\n  return (\n<div>\n  <div class=\"container-fluid bg-light text-dark p-7\" >\n   <div class=\"container bg-light p-5\" style={{textAlign: 'left'}}>\n     <h1 class=\"display-4 fw-bold\">RATS</h1>\n       <p>Rat Keeper: {props.userAddress}</p>\n       <div>{ids.length != 0 \n       &&   <div>     <p>RATS: {ids.length} <a style={{marginLeft: \"25px\"}}>NIBBLES: {Math.round((props.nibblesBalance *100) /100).toLocaleString()}</a> </p>  <div>{totalUnclaimedTrinketYield > 0 && <> <p> Your rats have been hard at work and have gathered {totalUnclaimedTrinketYield} TRINKETS <div style ={{textAlign: 'center'}}> <button type=\"button\" class=\"button-54\" style = {{marginLeft: '25px'}} onClick={claimYieldAll}>Collect TRINKETS </button></div> </p></>  } </div> </div> } </div>\n\n    </div>\n  </div>\n\n\n    <div className=\"container\" style={style1}>\n    {props.isConnected == false \n  ? <> <h1>Please connect to view Rats.</h1> <button type=\"button\" class=\"button-54\"onClick={props.web3Enabled}> Connect </button> </>\n  :  <div> {ids.length == 0 \n            ? <><h1>You have no Rats yet!</h1><NavLink to=\"/mint\"><button type=\"button\" class=\"button-54\"> Mint Rats </button></NavLink></>\n            : <div className=\"row\">\n            {ids.map(id=> ( \n              <NFTDisplay rarity='uncommon' id = {id} uri={props.uri} userAddress={props.userAddress} loadRatLevel={props.loadRatLevel} levelUpRat={props.levelUpRat}levelUpRatCost={props.levelUpRatCost}loadRatYield={props.loadRatYield}claimRatYield={props.claimRatYield} loadGatherTime={props.loadGatherTime} nibblesBalance={props.nibblesBalance}></NFTDisplay>\n             ))}\n            </div>\n          }\n            </div>  \n  }\n\n\n    </div>\n    <p style={style1}></p>\n</div>\n\n  );\n};\n\n\n\n\nexport default Contact;\n// export default Contact;\n      \n\n","import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\n\nfunction Post() {\n  let { postSlug } = useParams();\n\n  useEffect(() => {\n    // Fetch post using the postSlug\n  }, [postSlug]);\n\n  return (\n    <div className=\"home\">\n      <div class=\"container\">\n        <h1 className=\"mt-5\">Vision</h1>\n        <h6 className=\"mb-5\">The post slug is, {postSlug}</h6>\n        <p>\n          Lorem Ipsum is simply dummy text of the printing and typesetting\n          industry. Lorem Ipsum has been the industry's standard dummy text ever\n          since the 1500s, when an unknown printer took a galley of type and\n          scrambled it to make a type specimen book.\n        </p>\n        <p>\n          Lorem Ipsum is simply dummy text of the printing and typesetting\n          industry. Lorem Ipsum has been the industry's standard dummy text ever\n          since the 1500s, when an unknown printer took a galley of type and\n          scrambled it to make a type specimen book.\n        </p>\n        <p>\n          Lorem Ipsum is simply dummy text of the printing and typesetting\n          industry. Lorem Ipsum has been the industry's standard dummy text ever\n          since the 1500s, when an unknown printer took a galley of type and\n          scrambled it to make a type specimen book.\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Post;","import React, {useState} from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport cheese from '../assets/images/cheese.png';\nimport trinket from '../assets/images/trinket.png';\n\nimport './Home.css';\nimport Table from \"react-bootstrap/Table\";\n\n\n\nfunction About(props) {\n\n\n  // const DailyYieldPerTrinket = (((((props.unclaimedNibbles / props.stakedTrinketBalance) / props.trinketStakeTime) * 60 ) * 60) * 24);\n  // const DailyYield = DailyYieldPerTrinket * props.stakedTrinketBalance;\n  // let max = Math.max(props.stakedTrinketBalance, props.trinketBalance);\nconst [inputValue, setInputValue] = useState(0);\nconst [maxIsStake, setMaxIsStake] = useState(true);\n\n\nconst inputValueChange = (event) => {\n    setInputValue(event.target.value)\n  \n}\nconst inputValueChangeMax = (event) => {\n  if (maxIsStake === false){\n    setInputValue(props.stakedTrinketBalance)\n    setMaxIsStake(true);\n  }\n  else {\n    setInputValue(props.trinketBalance)\n    setMaxIsStake(false);\n  }\n  \n}\n\nconst handleStake = async() => {\n    let y = inputValue.toString();\n    await props.stake(y);\n}\n\nconst handleUnstake = async() => {\n  if (inputValue <= props.stakedTrinketBalance && inputValue > 0 ){\n  let y = inputValue.toString()\n  await props.unstake(y);\n  }\n}\n\nconst claimYield = async() => {\n  props.claimNibbles(props.userAddress)\n}\n\nconst trinketStyle = {\n  color: '#E84141',\n  fontWeight: 'bold',\n  textAlign: 'center'\n\n}\n\nconst nibbleStyle = {\n  color: '#EBDD5B',\n  fontWeight: 'bold',\n  textAlign: 'center'\n}\n\nconst cardStyleTrink = {\n\n  height: '260px',\n  textAlign: 'center',\n  border: '6px solid #E84141'\n  \n}\nconst cardStyleNib = {\n\n  height: '260px',\n  textAlign: 'center',\n  border: '6px solid #EBDD5B',\n  marginBotton:'500px'\n  \n}\n\n  return (\n\n    \n    <div className=\"about\">\n \n      <div class=\"container-fluid bg-light text-dark p-7\" >\n   <div class=\"container bg-light p-5\">\n    <h1>Stake <span style={trinketStyle}>TRINKETS</span> to earn <a style={nibbleStyle}>NIBBLES.</a></h1>\n    <p></p>\n    <h4>Feed $NIBBLES to your rats to level them up!</h4>\n     \n    </div>\n\n  </div>\n  <div className='container' style={{color: \"black\"}}>\n    <div classname=\"row\">\n\n<div className=\"col\" >\n<Card style = {cardStyleTrink}> \n<Card.Body>\n<Card.Title>\n<h1 style={trinketStyle}>TRINKETS</h1>\n<img src={trinket} className=\"icons\"></img>\n<Table class=\"table table-borderless\" >\n<tbody class=\"table table-borderless\" >\n  \n<tr>\n    <td > <a >Trinkets in wallet:</a> </td>\n    <td > Trinkets staked:</td>\n  </tr>\n  <tr>\n    <td> <a>{((Math.round(props.trinketBalance *100) /100)).toLocaleString() } </a></td>\n    <td  > {(Math.round(props.stakedTrinketBalance *100) /100).toLocaleString() }</td>\n  </tr>\n  </tbody>\n\n</Table>\n</Card.Title>\n<>{props.isConnected === true ?\n<div style={{textAlign: \"center\"}}>\n<button  class='button-54' style={{marginRight: '0px'}}onClick={inputValueChangeMax}>Max</button><input class='inputTest' type='number' onChange={inputValueChange} value={inputValue} placeholder={inputValue}></input>\n<a>{props.isLive === true ? <><button class='button-54' onClick={handleStake}>Stake </button><button class='button-54' onClick={handleUnstake}>Unstake </button></>: <button class='button-54'>(SOON!) </button>}</a>\n</div>\n: <button  class='button-54'onClick={props.web3Enabled}>Connect to farm!</button>\n}</>\n</Card.Body>\n</Card>\n</div>\n<>{props.stakedTrinketBalance > 0 && \n<div className=\"col\" style = {{marginBottom:\"100px\"}} >\n<Card style = {cardStyleNib}> \n<Card.Body>\n<Card.Title>\n<h1 style={nibbleStyle}>NIBBLES</h1>\n<img src={cheese} className=\"icons\"></img>\n<Table class=\"table table-borderless\" >\n<tbody class=\"table table-borderless\" >\n  \n<tr>\n    <td > <a >Pending:</a> </td>\n    <td >Balance:</td>\n  </tr>\n  <tr>\n    <td> <a>{(Math.round(props.unclaimedNibbles *100) /100).toLocaleString() }</a></td>\n    <td  >  {(Math.round(props.nibblesBalance *100) /100).toLocaleString() }</td>\n  </tr>\n  </tbody>\n\n</Table>\n</Card.Title>\n<button  class='button-54'onClick={claimYield}>CLAIM NIBBLES</button>\n\n</Card.Body>\n</Card>\n</div>\n}</>\n\n\n\n{/* <div className=\"col\" >{props.stakedTrinketBalance > 0 && \n<Card style = {cardStyle}> \n<Card.Body>\n<Card.Title>\n<h1 style={nibbleStyle}>NIBBLES </h1>\n\n<div>\n\n<Table class=\"table table-borderless\" >\n<tbody class=\"table table-borderless\" >\n<tr>\n    <td> Pending rewards: </td>\n    <td> Nibbles in wallet: </td>\n  </tr>\n  <tr>\n    <td   > {(Math.round(props.unclaimedNibbles *100) /100).toLocaleString() } ({(Math.round(DailyYield *100) /100).toLocaleString() }/day)</td>\n    <td  > {(Math.round(props.nibblesBalance *100) /100).toLocaleString() }</td>\n\n  </tr>\n\n  </tbody>\n</Table>\n\n<button class='button-54' onClick={claimYield}>Claim Nibbles</button>\n\n\n\n\n</div>\n\n</Card.Title>\n</Card.Body>\n</Card>\n}\n</div> */}\n\n</div>\n    </div>\n    </div>\n  );\n}\n\nexport default About;\n\n\n","import React from \"react\";\nimport './Popup.css'\nimport Card from \"react-bootstrap/Card\";\nimport \"../index.css\";\n\n\n \n\nconst Popup = props => {\n  return (\n    <div>\n\n\n    <div className=\"popup-box\" onClick={props.handleClose}>\n      {/* <div className=\"box\">\n        <span className=\"close-icon\" onClick={props.handleClose}>x</span>\n        {props.content}\n      </div>\n      \n     \n    </div>\n    <div class=\"card\" style=\"width: 18rem;\">\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">Special title treatment</h5>\n    <p class=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\n    <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\n  </div> */}\n<Card className=\"box\" style={{ width: '45%'  }}>\n<span className=\"close-icon\" onClick={props.handleClose}>x</span>\n  <Card.Body>\n    <Card.Title>{props.header}</Card.Title>\n{props.content}\n\n\n  </Card.Body>\n\n</Card>\n</div>\n\n    </div>\n  );\n};\n \nexport default Popup;","import React, {useEffect, useCallback, useState} from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport image from \"../assets/images/avax-logo.svg\";\nimport './Mint.css'\nimport './Home.css'\nimport {imgUri} from \"../assets/addresses.js\"\nimport rat from \"../assets/images/tester.png\";\nimport MintCard from \"./MintCard.jsx\";\n\n\n\n\n// import Button from \"react-bootstrap/Button\";\nimport 'reactjs-popup/dist/index.css';\n\n\n\nfunction Mint(props) {\n\n  const [uris, setURIs] = useState(['']);\n\n\n  const randomUris = () => {\n    var uris = [];\n    for(var i = 0; i < 6; i++) {\n      var imgURL = imgUri + (Math.floor((Math.random() * 100) + 1)).toString() + '.png';\n      uris.push(imgURL);\n    }\n    setURIs(uris);\n  }\n  const [mintAmount, setMintAmount] = useState(1);\n\n    const mintRat = () => {\n        props.mintRat(mintAmount)\n    }\n    const handleMintAmountChange = (event) => {\n      \n        \n        if (event.target.value == 'up'){\n            if (mintAmount < 20 ){\n                setMintAmount(mintAmount+1)\n            }\n        }\n        if (event.target.value == 'down'){\n            if (mintAmount > 1 ){\n                setMintAmount(mintAmount-1)\n            }\n        }\n    }\n    \n    useEffect(() => {\n        randomUris()\n        }, [props.userAddress])\n\n  return (\n    \n    <div class=\"container-fluid bg-dark text-light p-7\" >\n    <div class=\"container bg-dark p-5\">\n      <h1 class=\"display-4 fw-bold \">Grow your mischief - Mint $RATS</h1>\n\n\n        <div class=\"card mint-card\">\n    <div class=\"card-horizontal \" >        \n    <div class=\"card-body\"> \n    <h3 class=\"card-title\">Rat Keeper:</h3> <p>{props.userAddress}</p></div>\n      </div>\n      </div>\n\n<MintCard\n  userAddress={props.userAddress}\n  web3Enabled={props.web3Enabled}\n  mintRat={props.mintRat}\n  nftTotalSupply={props.nftTotalSupply}\n  avaxBalance={props.avaxBalance}></MintCard>\n<div class=\"card \">\n    <div class=\"card-horizontal \" >\n        <div class=\"img-square-wrapper\">\n          {uris.map(uri=> ( \n              <img class=\"imgSizer\" src={rat} alt={rat}/>\n          ))}\n        </div>\n   \n    </div>\n  \n</div>\n\n     </div>\n\n   </div>\n  );\n} \nexport default Mint;\n","import React, { useState} from 'react'\nimport axios from \"axios\";\nimport {nftFactoryAddress, nfTradeAddress, uri}from '../assets/addresses.js';\n\n\n\nexport default function SimpleNFT(props) {\n\n  \n\n\n    const [ rat, setRat ] = useState('');\n    const [rarity, setRarity] = useState(\"\");\n\n    const metadataUrl = (uri + props.id + '.json');\n\n    const fetchData = async () => {\n        const response = await axios.get(metadataUrl);\n        setRat(response.data);\n        const rarity = response.data.attributes[0].value;\n        if (rarity == \"Common\") {\n          setRarity(\"fffff\");\n        }\n        if (rarity == \"Uncommon\") {\n          setRarity(\"#1eff00\");\n        }\n        if (rarity == \"Rare\") {\n          setRarity(\"#0070dd\");\n        }\n        if (rarity == \"Epic\") {\n          setRarity(\"#a335ee\");\n        }\n        if (rarity == \"Legendary\") {\n          setRarity(\"#ff8000\");\n        }\n\n    };\n\n    fetchData();\n\n\n    const style1 = {\n        width: '20rem'  \n    }\n    const style2 = {\n        width: '65%',  \n        boxshadow: \"1px 1px 0px 0px, 2px 2px 0px 0px, 3px 3px 0px 0px, 4px 4px 0px 0px, 5px 5px 0px 0px\"\n\n    }\n    const bold = {\n        fontWeight: 'bold'\n    }\n    \n    return (\n<>{rat && \n\n<div>\n<img style = {style2 } src={rat.image}></img>\n<p></p>\n<h4>{rat.name}<a style={{ color: rarity }}> {\" \"} {rat.attributes[0].value} </a></h4>\n</div> }</>\n    )\n}","import React, { useEffect, useCallback, useState, Button } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  NavLink,\n} from \"react-router-dom\";\nimport {\n  Navigation,\n  Footer,\n  Home,\n  About,\n  Swarm,\n  Stake,\n  Popup,\n  Mint,\n  SimpleNFT,\n  MintCard,\n} from \"./components\";\nimport Web3 from \"web3\";\nimport NFT from \"./abi/FactoryNFT.json\";\nimport Trinket from \"./abi/Trinkets.json\";\nimport Nibbles from \"./abi/Nibbles.json\";\nimport {\n  nftFactoryAddress,\n  trinketFarmAddress,\n  nibblesAddress,\n  snowTraceAddress,\n  snowtraceAddress,\n} from \"./assets/addresses.js\";\nimport Card from \"react-bootstrap/Card\";\n\n//About Page\n//Add content\n//make more interesting\n//TOOO - clean up fallback functions\n\nexport default function App() {\n  const web3 = new Web3(Web3.givenProvider);\n\n  //declare web3 state variables\n  const isLive = true;\n  const [network, setNetwork] = useState(\"none\");\n  const [userAddress, setUserAddress] = useState(\"none\");\n  const [userConnected, setUserConnected] = useState(false);\n  const [avaxBalance, setAvaxBalance] = useState(\"0\");\n  const [trinketBalance, setTrinketBalance] = useState(\"0\");\n  const [nftBalance, setNftBalance] = useState(\"\");\n  const [uri, setUri] = useState(\"\");\n  const [nftTotalSupply, setNftTotalSupply] = useState(\"* \");\n  const [stakedTrinketBalance, setStakedTrinketBalance] = useState(\"0\");\n  const [unclaimedNibbles, setUnclaimedNibbles] = useState(\"0\");\n  const [nibblesBalance, setNibblesBalance] = useState(\"0\");\n  const [trinketStakeTime, setTrinketStakeTime] = useState(\"0\");\n\n  //declare contract\n  const nftFactory = new web3.eth.Contract(NFT.abi, nftFactoryAddress);\n  const trinketFarm = new web3.eth.Contract(Trinket.abi, trinketFarmAddress);\n  const nibbles = new web3.eth.Contract(Nibbles.abi, nibblesAddress);\n\n  //prompt user to connect\n  const web3Enabled = async () => {\n    if (window.ethereum) {\n      await window.ethereum.send(\"eth_requestAccounts\");\n      window.web3 = new Web3(window.ethereum);\n      componentDidMount();\n      return true;\n    }\n    return false;\n  };\n\n  //Load User account function\n  const loadUser = async () => {\n    let accounts = await web3.eth.getAccounts();\n    let account = accounts[0];\n    setUserConnected(true);\n    loadNetwork();\n\n    return account;\n  };\n\n  //Load Network function\n  const loadNetwork = async () => {\n    let num = await web3.currentProvider.chainId;\n    console.log(num);\n    if (num === \"0xa86a\") {\n      setNetwork(\"Avax\");\n    }\n    if (num === \"0xa869\") {\n      setNetwork(\"Fuji\");\n    } else {\n      setNetwork(num);\n    }\n  }\n\n  //Load avax/trinket/nib balance functions\n  const loadAVAXBalance = useCallback(\n    async (usr) => {\n      await web3.eth.getBalance(usr).then((balance) => {\n        setAvaxBalance(web3.utils.fromWei(balance));\n      });\n    },\n    [setAvaxBalance]\n  );\n\n  const loadTrinketBalance = useCallback(\n    async (usr) => {\n      let bal = await trinketFarm.methods.balanceOf(usr).call();\n      setTrinketBalance(web3.utils.fromWei(bal));\n    },\n    [\"0\"]\n  );\n\n  const loadNibblesBalance = useCallback(\n    async (usr) => {\n      let bal = await nibbles.methods.balanceOf(usr).call();\n      setNibblesBalance(web3.utils.fromWei(bal));\n    },\n    [\"0\"]\n  );\n\n  //load NFT collection and URI\n  const loadNftBalance = useCallback(\n    async (usr) => {\n      let bal = await nftFactory.methods.balanceOf(usr.toString()).call();\n      let uri = await nftFactory.methods.baseURL().call();\n      let ids = [];\n      for (var i = 0; i < bal; i++) {\n        let tokenId = await nftFactory.methods\n          .tokenOfOwnerByIndex(usr.toString(), i)\n          .call();\n        ids.push(tokenId);\n      }\n      setNftBalance(ids);\n      setUri(uri);\n    },\n    [setNftBalance]\n  );\n\n  const loadNFTSupply = useCallback(async (usr) => {\n    let bal = await nftFactory.methods.totalSupply().call();\n    setNftTotalSupply(bal);\n  });\n\n  //NFT rat data/functions\n  const loadRatLevel = useCallback(async (id) => {\n    let bal = await nftFactory.methods.currentLevel(id).call();\n    return bal;\n  });\n\n  const loadGatherTime = async (id) => {\n    const time = await trinketFarm.methods.gatherTime(id).call();\n    return time;\n  };\n\n  const loadRatYield = useCallback(async (id) => {\n    let ratYield = await trinketFarm.methods.calculateYield(id).call();\n\n    return ratYield / 10;\n  });\n\n  const loadTotalUnclaimedTrinketYield = useCallback(async (userAddress) => {\n    let totalUnclaimedTrinketYield = await trinketFarm.methods\n      .totalUnclaimedTrinkets(userAddress)\n      .call();\n    return totalUnclaimedTrinketYield;\n  });\n\n  const claimRatYield = useCallback(async (id) => {\n    let utils = { from: userAddress };\n    await trinketFarm.methods.claimTrinkets(id).send(utils);\n    return true;\n  });\n\n  const claimRatYieldAll = useCallback(async (userAddress) => {\n    let utils = { from: userAddress };\n    let claimAmount = await loadTotalUnclaimedTrinketYield(userAddress);\n    let checker = trinketBalance;\n    popupHandler(\"claim\", [\"Trinkets\", claimAmount / 10]);\n    await trinketFarm.methods\n      .claimTrinketsAllRats(userAddress)\n      .send(utils)\n      .on(\"confirmation\", function (a, receipt) {\n        popupHandler(\"claimed\", [\n          \"Trinkets\",\n          claimAmount / 10,\n          snowtraceAddress + \"tx/\" + receipt.transactionHash,\n        ]);\n      });\n    return true;\n  });\n\n  //level up  a rat\n  const levelUpRat = async (id) => {\n    let utils = { from: userAddress };\n    const currentLevel = await loadRatLevel(id);\n    const levelUpPrice = await nftFactory.methods.levelUpCost(id).call();\n    popupHandler(\"levelApprove\", [id, currentLevel, levelUpPrice]);\n    const convertPrice = web3.utils.toWei(levelUpPrice);\n    await nibbles.methods\n      .approve(nftFactoryAddress, convertPrice)\n      .send(utils)\n      .on(\"confirmation\", function (a, receipt) {\n        popupHandler(\"levelConfirm\", [id, currentLevel, levelUpPrice]);\n      });\n    await nftFactory.methods\n      .levelUp(id)\n      .send(utils)\n      .on(\"confirmation\", function (a, receipt) {\n        popupHandler(\"levelSuccess\", [\n          id,\n          currentLevel,\n          levelUpPrice,\n          snowtraceAddress + \"tx/\" + receipt.transactionHash,\n        ]);\n      });\n  };\n\n  const levelUpRatCost = async (id) => {\n    const levelUpPrice = await nftFactory.methods.levelUpCost(id).call();\n    return levelUpPrice;\n  };\n\n  //Mint new rat function\n  const mintRat = async (nftMintAmount) => {\n    let utils = {\n      from: userAddress,\n      value: 1000000000000000000 * nftMintAmount,\n    };\n    popupHandler(\"mint\", nftMintAmount);\n    await nftFactory.methods\n      .createToken(nftMintAmount)\n      .send(utils)\n      .on(\"confirmation\", function (a, receipt) {\n        const data = [];\n        data.push(snowtraceAddress + \"tx/\" + receipt.transactionHash);\n        if (receipt.events.Transfer.length > 1) {\n          data.push(receipt.events.Transfer[0].returnValues.tokenId);\n        } else {\n          data.push(receipt.events.Transfer.returnValues.tokenId);\n        }\n        data.push(nftMintAmount);\n        popupHandler(\"minted\", data);\n      });\n  };\n\n  //popup functions------------------------------------------------------------------\n  const [isOpen, setIsOpen] = useState(false);\n  const [popupHeader, setPopupHeader] = useState(\"\");\n  const [popupContent, setPopupContent] = useState(\"\");\n  var hasConfirmed = false;\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n    hasConfirmed = true;\n  };\n\n  function popupHandler(type, data) {\n    //mint\n    if (type === \"mint\") {\n      setPopupHeader(\n        <a>\n          Minting {data} Rat{data > 1 && \"s\"}....\n        </a>\n      );\n      setPopupContent(\n        <>\n          <a style={{ opacity: \"0.5\" }}>\n            Please confirm transaction in wallet.\n          </a>\n          <p></p>\n          <div id=\"loading\"></div>\n        </>\n      );\n      setIsOpen(!isOpen);\n      hasConfirmed = false;\n    }\n    if (type === \"minted\" && hasConfirmed === false) {\n      setPopupHeader(\n        <>\n          <p>Success!</p>{\" \"}\n          <a>\n            {\" \"}\n            {data[2]} Sewer Rat{data[2] > 1 && \"s\"} Minted!\n          </a>\n        </>\n      );\n      setPopupContent(\n        <>\n          {\" \"}\n          <SimpleNFT id={data[1]}></SimpleNFT>{\" \"}\n          <NavLink to=\"/swarm\">\n            <button class=\"button-55\" role=\"button\">\n              {\" \"}\n              view rats{\" \"}\n            </button>\n          </NavLink>\n          <p></p>\n          <a href={data[0]}> view on snowtrace</a>\n        </>\n      );\n      setIsOpen(!isOpen);\n      hasConfirmed = true;\n\n      //claim nibbles and  trinkets\n    }\n    if (type === \"claim\") {\n      setPopupHeader(\n        <a>\n          Claiming {data[1]} {data[0]}...\n        </a>\n      );\n      setPopupContent(\n        <>\n          <a style={{ opacity: \"0.5\" }}>\n            Please confirm transaction in wallet.\n          </a>\n          <p></p>\n          <div id=\"loading\"></div>\n        </>\n      );\n      setIsOpen(!isOpen);\n      hasConfirmed = false;\n    }\n    if (type === \"claimed\" && hasConfirmed == false) {\n      setPopupHeader(<a>Success!</a>);\n      setPopupContent(\n        <>\n          {\" \"}\n          <p>\n            {data[1]} {data[0]} claimed.\n          </p>\n          <p style={{ opacity: \"0.5\" }}>*nibble nibble*</p>\n          <p>\n            <a href={data[2]}>view on snowtrace</a>\n          </p>\n        </>\n      );\n      setIsOpen(!isOpen);\n      hasConfirmed = true;\n\n      //stake\n    }\n    if (type === \"stakeApprove\" && hasConfirmed == false) {\n      setPopupHeader(<a>Approving {data} Trinkets for stake.</a>);\n      setPopupContent(\n        <>\n          {\" \"}\n          <a style={{ opacity: \"0.5\" }}>Please approve spend in wallet.</a>\n          <p></p>\n          <div id=\"loading\"></div>{\" \"}\n        </>\n      );\n      setIsOpen(!isOpen);\n      hasConfirmed = false;\n    }\n    if (type === \"stakeConfirm\" && hasConfirmed == false) {\n      setPopupHeader(<a>Staking {data} Trinkets...</a>);\n      setPopupContent(\n        <>\n          <a style={{ opacity: \"0.5\" }}>Please sign transaction.</a>\n          <p></p>\n          <div id=\"loading\"></div>{\" \"}\n        </>\n      );\n      setIsOpen(!isOpen);\n      hasConfirmed = false;\n    }\n    if (type === \"staked\" && hasConfirmed == false) {\n      setPopupHeader(<a>Success!</a>);\n      setPopupContent(\n        <>\n          <p>{data[0]} Trinkets staked and pending Nibbles claimed. </p>\n          <p style={{ opacity: \"0.5\" }}>*nibble nibble*</p>\n          <p>\n            <a href={data[1]}>view on snowtrace</a>\n          </p>\n        </>\n      );\n      setIsOpen(!isOpen);\n      hasConfirmed = true;\n\n      //Level up\n    }\n    if (type === \"levelApprove\" && hasConfirmed == false) {\n      console.log(data);\n      setPopupHeader(\n        <a>\n          Leveling up Rat {data[0]} to level {parseInt(data[1]) + 1}.{\" \"}\n        </a>\n      );\n      setPopupContent(\n        <>\n          <SimpleNFT id={data[0]}></SimpleNFT>\n          <p>Cost: {data[2]} Nibbles</p>\n          <p style={{ opacity: \"0.5\" }}>\n            Please approve Nibble spend in wallet.\n          </p>\n          <div id=\"loading\"></div>\n        </>\n      );\n      setIsOpen(!isOpen);\n      hasConfirmed = false;\n    }\n    if (type === \"levelConfirm\" && hasConfirmed == false) {\n      setPopupHeader(\n        <a>\n          Leveling up Rat {data[0]} to level {parseInt(data[1]) + 1}.{\" \"}\n        </a>\n      );\n      setPopupContent(\n        <>\n          <SimpleNFT id={data[0]}></SimpleNFT>\n          <p>Cost: {data[2]} Nibbles</p>\n          <p style={{ opacity: \"0.5\" }}>Please confirm level up in wallet.</p>\n          <div id=\"loading\"></div>\n        </>\n      );\n      setIsOpen(!isOpen);\n      hasConfirmed = false;\n    }\n    if (type === \"levelSuccess\" && hasConfirmed == false) {\n      setPopupHeader(<a>Success! </a>);\n      setPopupContent(\n        <>\n          <SimpleNFT id={data[0]}></SimpleNFT>\n          <p>\n            Rat {data[0]} is now level {parseInt(data[1]) + 1}{\" \"}\n          </p>\n          <p style={{ opacity: \"0.5\" }}>*nibble nibble*</p>\n          <p>\n            <a href={data[3]}>view on snowtrace</a>\n          </p>\n        </>\n      );\n      setIsOpen(!isOpen);\n      hasConfirmed = true;\n    }\n  }\n\n  //nibble functions ---------------------------------------------\n  const stake = async (bal) => {\n    let utils = { from: userAddress };\n    let convertBal = web3.utils.toWei(bal);\n    popupHandler(\"stakeApprove\", bal);\n    await trinketFarm.methods\n      .approve(nibblesAddress.toString(), convertBal)\n      .send(utils)\n      .on(\"confirmation\", function (a, receipt) {\n        popupHandler(\"stakeConfirm\", bal);\n      });\n    await nibbles.methods\n      .stake(convertBal)\n      .send(utils)\n      .on(\"receipt\", function (receipt) {\n        const tx = snowtraceAddress + \"tx/\" + receipt.transactionHash;\n        popupHandler(\"staked\", [bal, tx]);\n      });\n  };\n  const unstake = async (bal) => {\n    let utils = { from: userAddress };\n    let convertBal = web3.utils.toWei(bal);\n    await nibbles.methods\n      .unstake(convertBal)\n      .send(utils)\n      .on(\"receipt\", function (receipt) {\n        console.log(receipt.transactionHash);\n      });\n  };\n  const claimNibbles = async (userAddress) => {\n    let utils = { from: userAddress };\n    popupHandler(\"claim\", [\"Nibbles\"]);\n    await nibbles.methods\n      .claimYield(userAddress)\n      .send(utils)\n      .on(\"confirmation\", function (conf, receipt) {\n        const tx = snowtraceAddress + \"tx/\" + receipt.transactionHash;\n        popupHandler(\"claimed\", [\"Nibbles\", \"\", tx]);\n      });\n  };\n\n  const loadStakeTime = async (user) => {\n    const time = await nibbles.methods.stakeTime(user).call();\n    setTrinketStakeTime(time);\n  };\n\n  const loadStakedTrinkets = useCallback(async (userAddress) => {\n    let stakedTrinkets = await nibbles.methods\n      .userStakingBalance(userAddress)\n      .call();\n    setStakedTrinketBalance(web3.utils.fromWei(stakedTrinkets));\n  });\n\n  const loadUnclaimedNibbles = useCallback(async (userAddress) => {\n    let unclaimedNibbles = await nibbles.methods\n      .calculateYield(userAddress)\n      .call();\n    setUnclaimedNibbles(web3.utils.fromWei(unclaimedNibbles));\n  });\n  //Call functions and load user data\n  const componentDidMount = useCallback(async () => {\n   \n    await loadUser().then(\n      (response) => {\n        if (response != userAddress) {\n          setUserAddress(response);\n        }\n        loadAVAXBalance(response);\n        if (isLive === true) {\n          loadTrinketBalance(response);\n          loadNftBalance(response);\n          loadStakedTrinkets(response);\n          loadNibblesBalance(response);\n          loadUnclaimedNibbles(response);\n          loadStakeTime(response);\n        }\n\n      },\n      []\n    );\n\n  });\n\n  // connect user if not currently connected after website loads and respond to changes in network etc.\n  useEffect(() => {\n    const interval = setInterval(() => {\n      \n      if (userConnected === true) {\n        componentDidMount();\n\n      }\n      if (isLive === true){\n        loadNFTSupply();\n      }\n\n    }, 2000);\n  }, [userAddress]);\n\n  return (\n    <Router>\n      <Navigation\n        isConnected={userConnected}\n        userAddress={userAddress}\n        avaxBalance={avaxBalance}\n        network={network}\n        web3Enabled={web3Enabled}\n        trinketBalance={trinketBalance}\n        stakedTrinketBalance={stakedTrinketBalance}\n        rats={nftBalance.length}\n        isLive={isLive}\n      />\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <Home\n              userAddress={userAddress}\n              web3Enabled={web3Enabled}\n              mintRat={mintRat}\n              nftTotalSupply={nftTotalSupply}\n              avaxBalance={avaxBalance}\n              isLive={isLive}\n            />\n          }\n        />\n        <Route path=\"/about\" element={<About />} />\n        <Route\n          path=\"/swarm\"\n          element={\n            <Swarm\n              userAddress={userAddress}\n              isConnected={userConnected}\n              web3Enabled={web3Enabled}\n              nftBalance={nftBalance}\n              uri={uri}\n              loadRatLevel={loadRatLevel}\n              levelUpRat={levelUpRat}\n              levelUpRatCost={levelUpRatCost}\n              loadRatYield={loadRatYield}\n              claimRatYield={claimRatYield}\n              claimRatYieldAll={claimRatYieldAll}\n              loadTotalUnclaimedTrinketYield={loadTotalUnclaimedTrinketYield}\n              loadGatherTime={loadGatherTime}\n              nibblesBalance={nibblesBalance}\n              isLive={isLive}\n            />\n          }\n        />\n\n        <Route\n          path=\"/stake\"\n          element={\n            <Stake\n              stake={stake}\n              unstake={unstake}\n              web3Enabled={web3Enabled}\n              isConnected={userConnected}\n              trinketBalance={trinketBalance}\n              stakedTrinketBalance={stakedTrinketBalance}\n              unclaimedNibbles={unclaimedNibbles}\n              userAddress={userAddress}\n              nibblesBalance={nibblesBalance}\n              claimNibbles={claimNibbles}\n              trinketStakeTime={trinketStakeTime}\n              isLive={isLive}\n            />\n          }\n        >\n          {/* <Route path=\"\" element={<Posts />} />\n        <Route path=\":postSlug\" element={<Post />} /> */}\n        </Route>\n        <Route\n          path=\"/mint\"\n          element={\n            <Mint\n              userAddress={userAddress}\n              mintRat={mintRat}\n              nftTotalSupply={nftTotalSupply}\n              avaxBalance={avaxBalance}\n              web3Enabled={web3Enabled}\n              isLive={isLive}\n            />\n          }\n        />\n      </Routes>\n      {isOpen && (\n        <Popup\n          content={popupContent}\n          header={popupHeader}\n          handleClose={togglePopup}\n        />\n      )}\n      <Footer />\n    </Router>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/trinket.785a660f.png\";","module.exports = __webpack_public_path__ + \"static/media/avax-logo.4e9df24e.svg\";","module.exports = __webpack_public_path__ + \"static/media/tester.7bc3c659.png\";"],"sourceRoot":""}